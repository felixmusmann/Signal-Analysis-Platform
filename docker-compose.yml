version: '3.5'
services:

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    command: yarn start
    ports:
      - '3000:3000'
      - '9222:9222'
    volumes:
      - ./frontend/:/app/
      - /app/node_modules/
    stdin_open: true
    environment:
      NODE_ENV: development
      REACT_APP_BACKEND_URL: http://localhost:8000/

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: &backend backend
    command: python manage.py runserver --noreload 0.0.0.0:8000
    ports:
      - '8000:8000'
      - '5678:5678'
    volumes:
      - ./backend/:/app/
    depends_on:
      - db
    env_file: .env

  worker:
    image: *backend
    command: celery --app=backend worker --hostname=worker@%h -P solo --loglevel=INFO
    ports:
      - '5679:5678'
    volumes:
      - ./backend/:/app/
    depends_on:
      - db
      - redis
    env_file: .env

  db:
    image: postgres:11.3
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:5.0
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: